{
 "layout": {
  "title": "components",
  "rows": [
   {
    "id": "13afc3e9-9106-7dc5-4b1a-1103a9a15fe7",
    "type": "LayoutResourceCode",
    "typeDesc": "Resource",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "name",
      "value": "DOCS",
      "type": "Id"
     },
     {
      "name": "resourceType",
      "value": "Css",
      "type": "Label"
     },
     {
      "name": "resourceCode",
      "value": "tr.odd {\nbackground-color: #FFF;\n} ",
      "type": "Resource"
     }
    ]
   },
   {
    "id": "4a750172-d3e4-6c93-4330-a9a4b5453a12",
    "type": "LayoutRow",
    "typeDesc": "Row",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "name",
      "value": "",
      "type": "Id"
     },
     {
      "name": "height",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "backgroundColor",
      "value": "",
      "type": "Color"
     },
     {
      "name": "roundCorners",
      "value": "",
      "type": "RoundCorners"
     },
     {
      "name": "textAlign",
      "value": "",
      "type": "TextAlign"
     },
     {
      "name": "cssClass",
      "value": "",
      "type": "String"
     }
    ]
   },
   {
    "id": "2b4b14f3-dfc9-a254-1fae-81eefefc2c90",
    "type": "LayoutBootstrapColumn",
    "typeDesc": "Column",
    "parent": "4a750172-d3e4-6c93-4330-a9a4b5453a12",
    "properties": [
     {
      "name": "name",
      "value": "MAIN_CONTENT",
      "type": "Id"
     },
     {
      "name": "bootstrapExtraSmall",
      "value": "",
      "type": "String"
     },
     {
      "name": "bootstrapSmall",
      "value": "",
      "type": "String"
     },
     {
      "name": "bootstrapMedium",
      "value": "12",
      "type": "String"
     },
     {
      "name": "bootstrapLarge",
      "value": "",
      "type": "String"
     },
     {
      "name": "bootstrapCssClass",
      "value": "",
      "type": "String"
     },
     {
      "name": "height",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "backgroundColor",
      "value": "",
      "type": "Color"
     },
     {
      "name": "roundCorners",
      "value": "",
      "type": "RoundCorners"
     },
     {
      "name": "textAlign",
      "value": "",
      "type": "TextAlign"
     },
     {
      "name": "cssClass",
      "value": "",
      "type": "String"
     }
    ]
   },
   {
    "id": "4ab59127-894b-690d-d24c-c6e0d7ffaedb",
    "type": "LayoutHtml",
    "typeDesc": "Html",
    "parent": "2b4b14f3-dfc9-a254-1fae-81eefefc2c90",
    "properties": [
     {
      "name": "name",
      "value": "",
      "type": "Id"
     },
     {
      "name": "html",
      "value": "<h2 id=\"bootstrap_button_group\">Bootstrap Button Group</h2>\n<h4>Common Options</h4>\n<table class=\"table\">\n    <thead>\n        <tr>\n            <th>Option</th>\n            <th>Example</th>\n            <th>Description</th>\n        </tr>\n        </thead>\n        <tbody>\n        <tr>\n            <td>Expression</td>\n            <td></td>\n            <td></td>\n        </tr>\n        <tr>\n            <td>Value As ID</td>\n            <td>True, False</td>\n            <td>Use the Data Value as the ID for the Button also?</td>\n        </tr>\n        <tr>\n            <td>Values Array</td>\n            <td>[\"ID\",\"Value\"]</td>\n            <td>A list of IDs and Values used to populate the Button Group Manually</td>\n        </tr>\n        <tr>\n            <td>Button Type</td>\n            <td>Primary, Warning, Danger, Info</td>\n            <td>The type of button to render. This defines its colour</td>\n        </tr>\n        <tr>\n            <td>Button Multi Select</td>\n            <td>True, False</td>\n            <td>Is the Button a Mult Select? If so you can string multiple choices as a comma seperated string</td>\n        </tr>\n        <tr>\n            <td>Button Block</td>\n            <td>True, False</td>\n            <td>Defines if the botton should be rendered using the full width of the parent div</td>\n        </tr>\n        <tr>\n            <td>Button Size</td>\n            <td>Default, Large, Small, Mini</td>\n            <td>The Size of the button to be rendered</td>\n        </tr>\n        <tr>\n            <td>Button Orientation</td>\n            <td>Horizontal, Vertical</td>\n            <td>How the Button Group should be rendered on the dashboard. Vertically or Horizontally</td>\n        </tr>\n    </tbody>\n</table>\n<h4>Button Types</h4>\n<span id=\"buttongroup_sample_1\"></span>\n<hr /> ",
      "type": "Html"
     },
     {
      "name": "fontSize",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "color",
      "value": "",
      "type": "Color"
     },
     {
      "name": "cssClass",
      "value": "",
      "type": "String"
     }
    ]
   }
  ]
 },
 "components": {
  "rows": [
   {
    "id": "IVYISBOOTSTRAP",
    "name": "Ivy IS Bootstrap",
    "type": "Label",
    "typeDesc": "<i>Group</i>",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "Group",
      "value": "Ivy IS Bootstrap",
      "type": "Label"
     }
    ]
   },
   {
    "id": "878532a1-25a7-7fb4-f606-4c115eb08c12",
    "type": "ComponentsBSButtonGroupComponent",
    "typeDesc": "Bootstrap Button Group",
    "parent": "IVYISBOOTSTRAP",
    "properties": [
     {
      "name": "name",
      "value": "BUTTONGROUP_SAMPLE_1",
      "type": "Id"
     },
     {
      "name": "parameter",
      "value": "${p:GROUP_PARAM}",
      "type": "Parameter"
     },
     {
      "name": "listeners",
      "value": "[]",
      "type": "Listeners"
     },
     {
      "name": "expression",
      "value": "function d(group){\n    console.log(group);\n}",
      "type": "JavaScript"
     },
     {
      "name": "parameters",
      "value": "[]",
      "type": "ValuesArray"
     },
     {
      "name": "valueAsId",
      "value": "true",
      "type": "Boolean"
     },
     {
      "name": "dataSource",
      "value": "",
      "type": "Datasource"
     },
     {
      "name": "valuesArray",
      "value": "[[\"Item 1\",\"Item 1\"],[\"Item 2\",\"Item 2\"],[\"Item 3\",\"Item 3\"]]",
      "type": "ValuesArray"
     },
     {
      "name": "priority",
      "value": 5,
      "type": "Integer"
     },
     {
      "name": "refreshPeriod",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "buttonType",
      "value": "btn-default",
      "type": "buttonTypeCustom"
     },
     {
      "name": "buttonMultiSelect",
      "value": "false",
      "type": "Boolean"
     },
     {
      "name": "buttonGroupBlock",
      "value": "false",
      "type": "Boolean"
     },
     {
      "name": "buttonGroupSize",
      "value": "",
      "type": "buttonGroupSizeCustom"
     },
     {
      "name": "buttonOrientation",
      "value": "btn-group",
      "type": "buttonOrientationCustom"
     },
     {
      "name": "htmlObject",
      "value": "buttongroup_sample_1",
      "type": "HtmlObject"
     },
     {
      "name": "executeAtStart",
      "value": "true",
      "type": "Boolean"
     },
     {
      "name": "preExecution",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "postExecution",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "postFetch",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "preChange",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "postChange",
      "value": "",
      "type": "JavaScript"
     }
    ]
   },
   {
    "id": "GENERIC",
    "name": "Generic",
    "type": "Label",
    "typeDesc": "<i>Group</i>",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "Group",
      "value": "Generic",
      "type": "Label"
     }
    ]
   },
   {
    "id": "c18ca5fa-2b65-a28f-d378-dbf80d2d15c8",
    "type": "ComponentsParameter",
    "typeDesc": "Simple parameter",
    "parent": "GENERIC",
    "properties": [
     {
      "name": "name",
      "value": "GROUP_PARAM",
      "type": "Id"
     },
     {
      "name": "propertyValue",
      "value": "Item 1",
      "type": "String"
     },
     {
      "name": "parameterViewRole",
      "value": "unused",
      "type": "parameterViewRoleCustom"
     },
     {
      "name": "bookmarkable",
      "value": "false",
      "type": "Boolean"
     }
    ]
   }
  ]
 },
 "datasources": {
  "rows": [
   {
    "id": "MDX",
    "name": "MDX Queries",
    "type": "Label",
    "typeDesc": "<i>Group</i>",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "Group",
      "value": "MDX Queries",
      "type": "Label"
     }
    ]
   },
   {
    "id": "6c7401f6-5229-d602-1f5c-00f0413bf84e",
    "type": "Componentsmdx_mondrianJndi",
    "typeDesc": "mdx over mondrianJndi",
    "parent": "MDX",
    "properties": [
     {
      "name": "name",
      "value": "TABLE_5",
      "type": "Id"
     },
     {
      "name": "access",
      "value": "public",
      "type": "Access"
     },
     {
      "name": "jndi",
      "value": "SampleData",
      "type": "Jndi"
     },
     {
      "name": "catalog",
      "value": "mondrian:/SteelWheels",
      "type": "MondrianCatalog"
     },
     {
      "name": "query",
      "value": "SELECT\nNON EMPTY [Measures].[Quantity] ON COLUMNS,\nNON EMPTY topcount([Product].[Vendor].Members,5,[Measures].[Quantity]) ON ROWS\nFROM [SteelWheelsSales]",
      "type": "SqlQuery"
     },
     {
      "name": "parameters",
      "value": "[]",
      "type": "CdaParameters"
     },
     {
      "name": "bandedMode",
      "value": "compact",
      "type": "BandedMode"
     },
     {
      "name": "cdacolumns",
      "value": "[]",
      "type": "CdaColumnsArray"
     },
     {
      "name": "cdacalculatedcolumns",
      "value": "[]",
      "type": "CdaCalculatedColumnsArray"
     },
     {
      "name": "output",
      "value": "[]",
      "type": "IndexArray"
     },
     {
      "name": "outputMode",
      "value": "include",
      "type": "OutputMode"
     },
     {
      "name": "cacheDuration",
      "value": 3600,
      "type": "Integer"
     },
     {
      "name": "cache",
      "value": "true",
      "type": "Boolean"
     }
    ],
    "meta": "CDA",
    "meta_conntype": "mondrian.jndi",
    "meta_datype": "mdx"
   },
   {
    "id": "8d972b22-9422-2cc4-6fe6-eac8bb23175b",
    "type": "Componentsmdx_mondrianJndi",
    "typeDesc": "mdx over mondrianJndi",
    "parent": "MDX",
    "properties": [
     {
      "name": "name",
      "value": "TABLE",
      "type": "Id"
     },
     {
      "name": "access",
      "value": "public",
      "type": "Access"
     },
     {
      "name": "jndi",
      "value": "SampleData",
      "type": "Jndi"
     },
     {
      "name": "catalog",
      "value": "mondrian:/SteelWheels",
      "type": "MondrianCatalog"
     },
     {
      "name": "query",
      "value": "SELECT\nNON EMPTY [Measures].[Quantity] ON COLUMNS,\nNON EMPTY topcount([Product].[Vendor].Members,25,[Measures].[Quantity]) ON ROWS\nFROM [SteelWheelsSales]",
      "type": "SqlQuery"
     },
     {
      "name": "parameters",
      "value": "[]",
      "type": "CdaParameters"
     },
     {
      "name": "bandedMode",
      "value": "compact",
      "type": "BandedMode"
     },
     {
      "name": "cdacolumns",
      "value": "[]",
      "type": "CdaColumnsArray"
     },
     {
      "name": "cdacalculatedcolumns",
      "value": "[]",
      "type": "CdaCalculatedColumnsArray"
     },
     {
      "name": "output",
      "value": "[]",
      "type": "IndexArray"
     },
     {
      "name": "outputMode",
      "value": "include",
      "type": "OutputMode"
     },
     {
      "name": "cacheDuration",
      "value": 3600,
      "type": "Integer"
     },
     {
      "name": "cache",
      "value": "true",
      "type": "Boolean"
     }
    ],
    "meta": "CDA",
    "meta_conntype": "mondrian.jndi",
    "meta_datype": "mdx"
   },
   {
    "id": "SCRIPTING",
    "name": "SCRIPTING Queries",
    "type": "Label",
    "typeDesc": "<i>Group</i>",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "Group",
      "value": "SCRIPTING Queries",
      "type": "Label"
     }
    ]
   },
   {
    "id": "f3cf8254-e30e-ae0b-4193-70b7dd905b04",
    "type": "Componentsscriptable_scripting",
    "typeDesc": "scriptable over scripting",
    "parent": "SCRIPTING",
    "properties": [
     {
      "name": "name",
      "value": "SLIDER1",
      "type": "Id"
     },
     {
      "name": "initscript",
      "value": "",
      "type": "String"
     },
     {
      "name": "language",
      "value": "beanshell",
      "type": "String"
     },
     {
      "name": "access",
      "value": "public",
      "type": "Access"
     },
     {
      "name": "query",
      "value": "\nimport org.pentaho.reporting.engine.classic.core.util.TypedTableModel;\n\nString[] columnNames = new String[1];\ncolumnNames[0] = &quot;Region&quot;;\nClass[] columnTypes = new Class[5];\ncolumnTypes[0] = String.class;\ncolumnTypes[1] = Integer.class;\ncolumnTypes[2] = Integer.class;\ncolumnTypes[3] = Integer.class;\ncolumnTypes[4] = Integer.class;\n\nTypedTableModel model = new TypedTableModel(columnNames, columnTypes);\nmodel.addRow(new Object[]{ new String(&quot;East&quot;), new Integer(10), new Integer(10), new Integer(14), new Integer(21)});\nmodel.addRow(new Object[]{ new String(&quot;West&quot;), new Integer(14), new Integer(34), new Integer(10), new Integer(12)});\nmodel.addRow(new Object[]{ new String(&quot;South&quot;), new Integer(10), new Integer(11), new Integer(14), new Integer(15)});\nmodel.addRow(new Object[]{ dataRow.get(&quot;status&quot;), new Integer(10), new Integer(11), new Integer(14), new Integer(15)});\nreturn model;",
      "type": "SqlQuery"
     },
     {
      "name": "parameters",
      "value": "[]",
      "type": "CdaParameters"
     },
     {
      "name": "outputMode",
      "value": "include",
      "type": "OutputMode"
     },
     {
      "name": "cdacolumns",
      "value": "[]",
      "type": "CdaColumnsArray"
     },
     {
      "name": "cdacalculatedcolumns",
      "value": "[]",
      "type": "CdaCalculatedColumnsArray"
     },
     {
      "name": "output",
      "value": "[]",
      "type": "IndexArray"
     },
     {
      "name": "cacheDuration",
      "value": 3600,
      "type": "Integer"
     },
     {
      "name": "cache",
      "value": "true",
      "type": "Boolean"
     }
    ],
    "meta": "CDA",
    "meta_conntype": "scripting.scripting",
    "meta_datype": "scriptable"
   }
  ]
 },
 "filename": "/system/IvyBC/dashboards/admin/button_group.cdfde"
}